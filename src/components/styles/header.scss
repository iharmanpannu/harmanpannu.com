//colors
$white: #fff;
$white_80: rgba(70, 146, 218, 0.664);
$color_trout_80_approx: rgba(70, 146, 218, 0.664);
$color_trout_approx: #4692da;

// @extend-elements
// original selectors
// .grid figure figcaption, .grid figure figcaption >a
%extend_1 {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.grid {
  position: relative;
  margin: 0 auto;
  padding: 1em 0 4em;
  max-width: 1000px;
  list-style: none;
  text-align: center;
  figure {
    position: relative;
    float: left;
    overflow: hidden;
    -webkit-clip-path: polygon(
      50% 0%,
      80% 10%,
      100% 35%,
      100% 70%,
      80% 90%,
      50% 100%,
      20% 90%,
      0% 70%,
      0% 35%,
      20% 10%
    );
    clip-path: polygon(
      50% 0,
      80% 10%,
      100% 35%,
      100% 70%,
      80% 90%,
      50% 100%,
      20% 90%,
      0 70%,
      0 35%,
      20% 10%
    );
    text-align: center;
    cursor: pointer;

    figcaption {
      color: $white;
      backface-visibility: hidden;
      > a {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1000;
        text-indent: 200%;
        white-space: nowrap;
        font-size: 0;
        opacity: 0;
      }
    }
    figcaption::before {
      pointer-events: none;
    }
    figcaption::after {
      pointer-events: none;
    }

    //
    p {
      font-size: 1em;
    }
  }
}
figure {
  &.effect-lily {
    p {
      -webkit-transform: translate3d(0, 20px, 0);
      transform: translate3d(0, 20px, 0);
      color: $white_80;
      opacity: 0;
      -webkit-transition: opacity 0.2s, -webkit-transform 0.35s;
      transition: opacity 0.2s, -webkit-transform 0.35s;
      -o-transition: opacity 0.2s, transform 0.35s;
      transition: opacity 0.2s, transform 0.35s;
      transition: opacity 0.2s, transform 0.35s, -webkit-transform 0.35s;
    }
    &:hover {
      img {
        opacity: 1;
        //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
        transform: translate3d(0, 0, 0);
      }
      p {
        opacity: 1;
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
        -webkit-transition-delay: 0.05s;
        -o-transition-delay: 0.05s;
        transition-delay: 0.05s;
        -webkit-transition-duration: 0.35s;
        -o-transition-duration: 0.35s;
        transition-duration: 0.35s;
      }
    }
  }
  &.effect-sadie {
    figcaption::before {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: -webkit-gradient(
        linear,
        left top,
        left bottom,
        color-stop(0, rgba(72, 76, 97, 0)),
        color-stop(50%, $color_trout_80_approx)
      );
      background: -webkit-linear-gradient(
        top,
        rgba(72, 76, 97, 0) 0,
        $color_trout_80_approx 50%
      );
      background: -o-linear-gradient(
        top,
        rgba(72, 76, 97, 0) 0,
        $color_trout_80_approx 50%
      );
      background: linear-gradient(
        to bottom,
        rgba(72, 76, 97, 0) 0,
        $color_trout_80_approx 50%
      );
      content: "";
      opacity: 0;
      -webkit-transform: translate3d(0, 50%, 0);
      transform: translate3d(0, 50%, 0);
      -webkit-transition: opacity 0.35s, -webkit-transform 0.35s;
      transition: opacity 0.35s, -webkit-transform 0.35s;
      -o-transition: opacity 0.35s, transform 0.35s;
      transition: opacity 0.35s, transform 0.35s;
      transition: opacity 0.35s, transform 0.35s, -webkit-transform 0.35s;
    }

    p {
      // font-size: 1em;
      color: #fff;
      border-radius: 20px;
      -webkit-transition: opacity 0.35s, -webkit-transform 0.35s;
      transition: opacity 0.4s, -webkit-transform 0.4s;
      -o-transition: opacity 0.35s, transform 0.35s;
      transition: opacity 0.35s, transform 0.35s;
      transition: opacity 0.35s, transform 0.35s, -webkit-transform 0.35s;
      position: absolute;
      bottom: 3px;
      left: 76px;
      padding: 5px;
      opacity: 0;
      -webkit-transform: translate3d(0, 20px, 0);
      transform: translate3d(0, 15px, 0);
    }
    &:hover {
      figcaption::before {
        opacity: 1;
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
      p {
        opacity: 1;
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }
  }
}

// //colors
// $color_astral_approx: #3085a3;
// $white: #fff;
// $color_trout_80_approx: rgba(72, 76, 97, 0.8);

// .grid {
//   position: relative;
//   margin: 0 auto;
//   padding: 1em 0 4em;
//   max-width: 1000px;
//   list-style: none;
//   text-align: center;
//   figure {
//     position: relative;
//     float: left;
//     overflow: hidden;
//     margin: 10px 1%;
//     min-width: 320px;
//     max-width: 480px;
//     max-height: 360px;
//     width: 48%;

//     text-align: center;
//     cursor: pointer;
//     img {
//       position: relative;
//       display: block;
//       min-height: 100%;
//       max-width: 100%;
//       opacity: 0.8;
//     }
//     figcaption {
//       padding: 2em;
//       color: $white;
//       text-transform: uppercase;
//       font-size: 1.25em;
//       -webkit-backface-visibility: hidden;
//       //Instead of the line below you could use @include backface-visibility($visibility)
//       backface-visibility: hidden;
//       position: absolute;
//       top: 0;
//       left: 0;
//       width: 100%;
//       height: 100%;
//       > a {
//         position: absolute;
//         top: 0;
//         left: 0;
//         width: 100%;
//         height: 100%;
//         z-index: 1000;
//         text-indent: 200%;
//         white-space: nowrap;
//         font-size: 0;
//         opacity: 0;
//       }
//     }
//     figcaption::before {
//       pointer-events: none;
//     }
//     figcaption::after {
//       pointer-events: none;
//     }
//     p {
//       letter-spacing: 1px;
//       font-size: 68.5%;
//     }
//   }
// }
// figure.effect-sadie {
//   figcaption::before {
//     position: absolute;
//     top: 0;
//     left: 0;
//     width: 100%;
//     height: 100%;
//     background: linear-gradient(
//       to bottom,
//       rgba(72, 76, 97, 0) 0,
//       $color_trout_80_approx 75%
//     );
//     content: "";
//     opacity: 0;
//     -webkit-transform: translate3d(0, 50%, 0);
//     //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
//     transform: translate3d(0, 50%, 0);
//     -webkit-transition: opacity 0.35s, -webkit-transform 0.35s;
//     //Instead of the line below you could use @include transition($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10)
//     transition: opacity 0.35s, transform 0.35s;
//   }
//   p {
//     -webkit-transition: opacity 0.35s, -webkit-transform 0.35s;
//     //Instead of the line below you could use @include transition($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10)
//     transition: opacity 0.35s, transform 0.35s;
//     position: absolute;
//     bottom: 0;
//     left: 0;
//     padding: 2em;
//     width: 100%;
//     opacity: 0;
//     -webkit-transform: translate3d(0, 10px, 0);
//     //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
//     transform: translate3d(0, 10px, 0);
//   }
//   &:hover {
//     figcaption::before {
//       opacity: 1;
//       -webkit-transform: translate3d(0, 0, 0);
//       //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
//       transform: translate3d(0, 0, 0);
//     }
//     p {
//       opacity: 1;
//       -webkit-transform: translate3d(0, 0, 0);
//       //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
//       transform: translate3d(0, 0, 0);
//     }
//   }
// }
